[{"id":"c3a4dc59.cbd38","type":"tab","label":"InfluxDB 2.0 (Copy of AWS 5/5/21)","disabled":false,"info":""},{"id":"a0a384b2.b52d18","type":"mqtt-broker","name":"Homeassistant","broker":"10.0.0.228","port":"1883","clientid":"NodeRed_DEV","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"ba3c48a6.db5fb8","type":"mqtt-broker","name":"MQTT AWS","broker":"3.6.91.43","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"9587fbc8.d380e8","type":"ui_tab","name":"GrafanaTest","icon":"dashboard","order":37},{"id":"2b57340a.adc9fc","type":"ui_group","name":"Admin","tab":"9587fbc8.d380e8","order":1,"disp":true,"width":"30","collapse":false},{"id":"bd298a08.350bb8","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"b372d132.6d9b4","type":"redis-config","name":"172.28.1.4:6379","options":"{}","cluster":false,"optionsType":"json"},{"id":"46f2f409.5630fc","type":"redis-config","name":"10.0.0.211:19379","options":"{}","cluster":false,"optionsType":"json"},{"id":"a0efbb89.5e42d8","type":"redis-config","name":"10.0.0.211:19379","options":"{}","cluster":false,"optionsType":"json"},{"id":"412e2394.62f55c","type":"redis-config","name":"redis:6379","options":"{}","cluster":false,"optionsType":"json"},{"id":"2be4e869.f349e8","type":"mqtt-broker","name":"MQTT AWS JIT","broker":"13.233.183.99","port":"1883","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"9cef5065.4f183","type":"mqtt-broker","name":"Homeassistant-NR01","broker":"10.0.0.228","port":"1883","clientid":"NodeRed_DEV01","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"40c7ee07.232d2","type":"inject","z":"c3a4dc59.cbd38","name":"Inject every second","repeat":"3","crontab":"","once":false,"onceDelay":"0.1","topic":"","payload":"","payloadType":"date","x":660,"y":80,"wires":[["6295a420.7395fc"]]},{"id":"c52f71f.56b6c9","type":"comment","z":"c3a4dc59.cbd38","name":"Get Sensor Data","info":"","x":100,"y":40,"wires":[]},{"id":"9241cbbe.17a808","type":"comment","z":"c3a4dc59.cbd38","name":"Interpret Sensor Data","info":"https://run.mocky.io/v3/b4b2d93d-896c-4d37-b019-5228a61e2338\n\n\nhttps://run.mocky.io/v3/a70af699-0e98-4fe0-9142-7e4c0618f3fb\n\n\nhttps://run.mocky.io/v3/3bb9ba80-d57a-4200-a80b-72d37021e190","x":340,"y":40,"wires":[]},{"id":"38c0194e.6e1566","type":"comment","z":"c3a4dc59.cbd38","name":"Send to InfluxDB 2.0","info":"","x":650,"y":40,"wires":[]},{"id":"290af507.edda7a","type":"function","z":"c3a4dc59.cbd38","name":"Split Topic","func":"// Authored by Martin Hannah & Michael Thompson\n// Last updated by Michael Thompson on 19/2/21\n// split the topic into two parts\nvar parts = msg.topic.split('/');\nvar topic = '';\nvar base = '';\nvar n    = 0;\nfor (var i of parts) {\n    if (n > 1) \n        topic = topic + i ;\n        if (i !== parts.length[i]) \n            topic = topic + '/';\n    n++;\n}\nbase = parts[0] + '/' + parts[1] + '/' ;\nmsg.path = base;\nmsg.topic = topic.substring(2,topic.length - 1);\n\nconst invalidDG = [\"SensorGroup\", \"true\", \"String\", \"undefined\"];\n// Update Device-Group Pairs\nconst DGpairs = flow.get(\"DGpairs\") || {};\nif (msg.topic.indexOf('SensorGroup') != -1 && !(invalidDG.includes(msg.payload))) \n    DGpairs[base] = msg.payload;\n\nflow.set(\"DGpairs\", DGpairs);\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":120,"wires":[["9e37cb20.5c27a8","25a92c6.21b75d4","99be3051.43da8","c786159c.878828"]]},{"id":"9e37cb20.5c27a8","type":"function","z":"c3a4dc59.cbd38","name":"Update Topic Flow Variable ","func":"// Authored by Michael Thompson on 30/12/2020\n// Last updated by Michael Thompson on 19/2/2021\n\n// Updates flow array containing all topics\n// May or may not be necessary // \n/*\nconst topicArray = flow.get(\"topicArray\") || [];\nif ((topicArray.includes(msg.topic))===false)\n    topicArray.push(msg.topic);\nflow.set(\"topicArray\", topicArray); */\n\n// Find group that matches the device, or if none is found it is ungrouped\nDGpairs = flow.get(\"DGpairs\");\ndevice = msg.path;\n\ngroup = DGpairs[device];\n\nvar topic = msg.topic;\n\n// Updates flow variable containing devices\nconst devices = flow.get(\"devices\") || [];\nif (!(devices.includes(device)) && group !== undefined)\n    devices.push(device);\nflow.set(\"devices\", devices);\n\n// Updates flow variable containing topics within current device\nconst deviceArray = flow.get(device+\"Array\") || [];//flow.get(device+\"Array\") ||\nif (!(deviceArray.includes(topic)) && !topic.includes(\"$\") && group !== undefined)\n    deviceArray.push(topic);\nflow.set(device+\"Array\",deviceArray);\nmsg.array = deviceArray;\n\n// Updates flow variable containing datatypes for each topic\nconst typeDict = flow.get(\"typeDict\") || {};\nif (topic.includes(\"$datatype\"))\n    // Assigns datatype to dict entry of topic name (ie without \"/$datatype\" suffix)\n    typeDict[topic.substring(0, topic.indexOf(\"/$datatype\"))] = msg.payload;\nflow.set(\"typeDict\", typeDict);\n\n// Updates flow variable for current group and topic\nif (!(topic.includes(\"$datatype\")) && !(topic.includes(\"SensorGroup\")) && \ntypeDict[topic] !== undefined  && group !== undefined) { \n   // type = typeDict[topic];\n    type = flow.get(\"typeDict\")[topic];\n    value = msg.payload;\n   //if (value == 'nan' || value == 'NaN') \n    //    return;\n    //else if (type == \"float\" || type == \"boolean\") {\n     //   value = msg.payload;\n        //value = parseFloat(msg.payload);\n        //}\n //   if (type == \"integer\" || msg.topic.includes(\"heart\"))\n   //     value = Number(msg.payload);\n    // Quotes added to specify string in line protocol\n    //else value = \"'\" +String(msg.payload)+ \"'\";\n    \n    flow.set(device+topic,\n            {\"value\":value,\n            // Bool for if data is new\n             //\"new\":true\n            });\n            \n}\n//msg.type = typeDict[topic];\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":160,"wires":[[]]},{"id":"6d9069b5.ec87b8","type":"comment","z":"c3a4dc59.cbd38","name":"Diagnostic: Check for Invalid Code","info":"","x":1340,"y":180,"wires":[]},{"id":"4ba2ad70.bf4974","type":"comment","z":"c3a4dc59.cbd38","name":"Diagnostic: Check for Invalid Code","info":"","x":1340,"y":220,"wires":[]},{"id":"cf79cbd2.c6be68","type":"comment","z":"c3a4dc59.cbd38","name":"Lachlan Suggestions","info":"","x":1320,"y":120,"wires":[]},{"id":"dab248bc.f82638","type":"change","z":"c3a4dc59.cbd38","name":"Get Timestamp","rules":[{"t":"set","p":"timestamp","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1280,"y":320,"wires":[[]]},{"id":"cb269fbe.0f056","type":"comment","z":"c3a4dc59.cbd38","name":"Get a Timestamp Change Prototype","info":"","x":1340,"y":280,"wires":[]},{"id":"3318826.477e27e","type":"function","z":"c3a4dc59.cbd38","name":"Reset DGpairs & devices","func":"flow.set(\"DGpairs\", {});\nvar devices = flow.get(\"devices\");\nfor (var device in devices)\n    flow.set(device+\"Array\", [])\n\n\n\nflow.set(\"devices\",[]);\n\n//flow.set(devices[0]+\"Array\", [])\n\n\nflow.set(\"topicArray\",[])\n\nflow.set(\"checkedTopics\",[])\nflow.set(\"checkedUnits\",[])\nflow.set(\"checkedTypes\",[])\n\nflow.set(\"unitDict\", {})\nflow.set(\"typeDict\", {})","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":460,"wires":[[]]},{"id":"111d27b3.038b18","type":"inject","z":"c3a4dc59.cbd38","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"3600","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":110,"y":460,"wires":[["3318826.477e27e","f2723552.fb2a68"]]},{"id":"7c63a0dd.21a91","type":"comment","z":"c3a4dc59.cbd38","name":"Diagnostics","info":"","x":90,"y":400,"wires":[]},{"id":"6295a420.7395fc","type":"array-loop","z":"c3a4dc59.cbd38","name":"Loop over Devices","key":"index","keyType":"msg","reset":false,"resetValue":"value-null","array":"devices","arrayType":"flow","x":650,"y":140,"wires":[[],["56088492.a715dc"]]},{"id":"56088492.a715dc","type":"function","z":"c3a4dc59.cbd38","name":"Send New Device Data","func":"// Authored by Michael Thompson on 29/12/2020\n// Last updated by Michael Thompson on 5/1/2021\nvar device = msg.payload;\nvar DGpairs= flow.get(\"DGpairs\");\n\n// Get group from device in GDpairs\ngroup = flow.get(\"DGpairs\")[device];\nmsg.device = device;\nmsg.group = group;\n\n\n// Array of Sensor Values\ndeviceArr = flow.get(device+\"Array\");\n\n\n\n// InfluxDB measurement set to group name as defined by loop over groups array\nmsg.measurement = flow.get(\"DGpairs\")[device];\n\n// For each sensor value, if the value is not set to \"undefined\" and contains new data, it is updated\n// in the JSON object\nvar send = false;\n\n// 11/2/21 Lachlan: Prototype ( +\" \"+Date.now()/1000 )\n// Code sourced from \n// https://www.toptal.com/software/definitive-guide-to-datetime-manipulation Punit Jajodia\nconst currentDate = new Date();\nconst timestamp = currentDate.getTime();\n\ndata = \"\";\n//data += \"\\n\"+group+\",host=\"+device+\" \"+\"mcu/execlog\"+\"=\"+flow.get(device+\"mcu/execlog\")[\"value\"]+\" \"+timestamp;\nfor (var topic of deviceArr) \n    if (flow.get(device+topic) !== undefined ) { //&& !isNaN(flow.get(device+topic)[\"value\"]) && flow.get(device+topic)[\"new\"] === true\n        type = flow.get(\"typeDict\")[topic];\n        value = flow.get(device+topic)[\"value\"];\n        \n        if (type == 'String'|| type == 'enum')\n            value = '\"' +value+ '\"';\n        \n        \n\n            \n           // value = Number(value);\n         \n        data += \"\\n\"+group+\",host=\"+device+\",unit=\"+flow.get(\"unitDict\")[topic]+\",type=\"+type+\" \"+topic+\"=\"+value+\" \"+timestamp;\n        flow.set(device+topic,undefined);\n        //{\"value\":flow.get(device+topic)[\"value\"],\"new\":false});\n        //send = true;\n    }\nflow.set(device+\"Array\",[]);\n// String of most up-to-date sensor values seperated by new lines returned\nmsg.payload = data;\n\nif (msg.payload !== \"\")\n    return msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":220,"wires":[["60a8fbd1.0dfab4","52c582f7.6f471c","6295a420.7395fc","4f7e86fa.d84f68"]]},{"id":"c19385ea.5beae8","type":"http request","z":"c3a4dc59.cbd38","name":"","method":"use","ret":"txt","paytoqs":true,"url":"","tls":"","proxy":"","authType":"","x":970,"y":120,"wires":[["490c6bbd.e53604"]]},{"id":"490c6bbd.e53604","type":"debug","z":"c3a4dc59.cbd38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":990,"y":160,"wires":[]},{"id":"60a8fbd1.0dfab4","type":"function","z":"c3a4dc59.cbd38","name":"API Setup (QNAP00)","func":"// Last updated by Lachlan Magrath on 4/2/2021\n\ntoken = \"6K5r8FLBQWkzqYwtdmjObF_MkLMNHhKJjKptyhaXhTzYrEhh1IDYfGCXcBUSGxjR7L5PRUzCxBQ4sCQSj78vIw==\"; \naddress = \"http://10.0.0.211:19086/api/v2/write\";\norganisation = \"cypernex\";\nbucket = \"all-data\";\nprecision = \"ms\";\n\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = address+\"?org=\"+organisation+\"&bucket=\"+bucket+\"&precision=\"+precision;\nmsg.headers = {\"Authorization\" : \"Token \" + token}\n\n// 4/3/21. Suggested addition of timestamp. Remove timestamp field.\n// delete msg.timestamp;\n//msg.payload = \"cyper/ESP12S008/,host=host1 mcu/taskschedule05/period=60\";\n//msg.payload = \"testhead,host=host1 meat_percent=64.43234543 1556896326\";\n\nif (msg.measurement === undefined) return;\n\nif (msg.payload != [])\n    return msg;\n\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":80,"wires":[["c19385ea.5beae8"]]},{"id":"52c582f7.6f471c","type":"debug","z":"c3a4dc59.cbd38","name":"Debug InfluxDB","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":960,"y":200,"wires":[]},{"id":"4f7e86fa.d84f68","type":"function","z":"c3a4dc59.cbd38","name":"API Setup (QNAP00)","func":"// Last updated by Lachlan Magrath on 4/2/2021\n\ntoken = \"fENYSkgt5TS9Q0mQsSolV88OvwWKFoFGmdqKF4F2Bl0yVAABplhv7PJvQTNpuDIb8ZcfHCP1gitDBB8QOJcR4A==\"; \naddress = \"http://10.0.0.211:18086/api/v2/write\";\norganisation = \"cypernex\";\nbucket = \"hi-res-24h\";\nprecision = \"ms\";\n\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = address+\"?org=\"+organisation+\"&bucket=\"+bucket+\"&precision=\"+precision;\nmsg.headers = {\"Authorization\" : \"Token \" + token}\n\n// 4/3/21. Suggested addition of timestamp. Remove timestamp field.\n// delete msg.timestamp;\n//msg.payload = \"cyper/ESP12S008/,host=host1 mcu/taskschedule05/period=60\";\n//msg.payload = \"testhead,host=host1 meat_percent=64.43234543 1556896326\";\n\nif (msg.measurement === undefined) return;\n\nif (msg.payload != [])\n    return msg;\n\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":240,"wires":[["13168a1e.47eb26"]]},{"id":"13168a1e.47eb26","type":"http request","z":"c3a4dc59.cbd38","name":"","method":"use","ret":"txt","paytoqs":true,"url":"","tls":"","proxy":"","authType":"","x":970,"y":280,"wires":[["73de205f.f826f"]]},{"id":"73de205f.f826f","type":"debug","z":"c3a4dc59.cbd38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":990,"y":320,"wires":[]},{"id":"25a92c6.21b75d4","type":"function","z":"c3a4dc59.cbd38","name":"Set reboots","func":"var topic = msg.topic;\n\n if (topic.includes(\"mcu/startingup\") && !topic.includes(\"$\") && msg.payload == \"1\") {\n    var varname = msg.path + \"reboots\";\n    flow.set(varname, {\"value\":1, \"uptime\": msg.payload});\n    \n    // Updates flow variable containing topics within current device\n    const deviceArray = flow.get(msg.path+\"Array\") || [];\n    if (!(deviceArray.includes(\"reboots\")))\n        deviceArray.push(\"reboots\");\n    flow.set(msg.path+\"Array\",deviceArray);\n    \n    return msg;\n}\n    \n\n\n\n\n\n\n\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":280,"wires":[["595e4452.5c3dcc"]]},{"id":"595e4452.5c3dcc","type":"debug","z":"c3a4dc59.cbd38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":590,"y":360,"wires":[]},{"id":"f2723552.fb2a68","type":"function","z":"c3a4dc59.cbd38","name":"Hardcode Datatypes","func":"var typeDict = flow.get(\"typeDict\")\n\n// Add hardcoded datatypes here\ntypeDict[\"mcu/execlog\"] = \"String\";\n\nflow.set(\"typeDict\", typeDict);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":500,"wires":[[]]},{"id":"bd8e882d.87ca78","type":"function","z":"c3a4dc59.cbd38","name":"Hardcode types and units","func":"// Code added here will be run once\n// whenever the node is started.\ntypeDict = {\"mcu/execlog\":\"String\",\"proximity/movement\":\"boolean\",\"sound/loadness\":\"integer\",\"vibration/vibration\":\"integer\",\"waterflow/tankwaterinlet\":\"integer\",\"power/voltage\":\"integer\",\"power/mV\":\"integer\",\"power/amp\":\"integer\",\"power/mA\":\"integer\",\"power/loadvoltage\":\"integer\",\"power/loadpower\":\"integer\",\"power/loadpowermw\":\"integer\",\"power/loadamps\":\"integer\",\"power/loadmA\":\"integer\",\"environment/temperature\":\"float\",\"environment/humidity\":\"float\",\"environment/heatindex\":\"float\",\"environment/pressure\":\"integer\",\"light/status\":\"enum\",\"light/illuminance\":\"integer\",\"mcu/heartbeat\":\"boolean\",\"airquality/status\":\"enum\",\"uvindex/status\":\"enum\",\"mcu/SensorGroup\":\"String\",\"mcu/vcc\":\"float\",\"mcu/realsize\":\"integer\",\"mcu/cpsize\":\"integer\",\"mcu/freespace\":\"integer\",\"mcu/ntptime\":\"String\",\"mcu/uptime\":\"integer\",\"waterlevel/fishtank/level\":\"integer\",\"waterlevel/fishtank/percentagefull\":\"float\",\"battery/vcc\":\"float\",\"environment/altitude\":\"integer\",\"environment/abshumidity\":\"float\",\"light/ambientlight\":\"String\",\"temperature00/degrees\":\"float\",\"uvindex/uvindex\":\"integer\",\"uvindex/uvrating\":\"String\",\"mcu/setsensorsound\":\"boolean\",\"mcu/setsensoruv\":\"boolean\",\"mcu/setsensorproximity\":\"boolean\",\"mcu/setsensormoisture\":\"boolean\",\"mcu/setsensorrainfall\":\"boolean\",\"mcu/setsensorlight\":\"boolean\",\"mcu/setsensorenviron\":\"boolean\",\"mcu/setsensorair\":\"boolean\",\"mcu/setsensorvibration\":\"boolean\",\"mcu/setsensorhydraphone\":\"boolean\",\"mcu/setsensordooropen\":\"boolean\",\"mcu/taskschedule01/period\":\"integer\",\"mcu/setsensorfishfeed\":\"boolean\",\"temperature/degrees\":\"float\",\"frontdoor/\":\"string\",\"frontdoor/dimmer2\":\"integer\",\"mcu/freeheap\":\"integer\",\"mcu/taskschedule01\":\"boolean\",\"mcu/taskschedule01/timeslice\":\"String\",\"mcu/setsensorrelay\":\"boolean\",\"mcu/taskschedule02/period\":\"integer\",\"mcu/setsensorpower\":\"boolean\",\"mcu/taskschedule02/timeslice\":\"String\",\"mcu/setsensorwaterlevel\":\"boolean\",\"mcu/taskschedule03/period\":\"integer\",\"mcu/setsensorwaterflow\":\"boolean\",\"mcu/taskschedule03/timeslice\":\"String\",\"mcu/setsensorthermister\":\"boolean\",\"mcu/taskschedule04/period\":\"integer\",\"mcu/setsensorwaterqual\":\"boolean\",\"mcu/taskschedule04/timeslice\":\"String\",\"mcu/setsensorph\":\"boolean\",\"mcu/taskschedule05/period\":\"integer\",\"mcu/setsensorturbidity\":\"boolean\",\"mcu/taskschedule05/timeslice\":\"String\",\"mcu/taskschedule02\":\"boolean\",\"mcu/taskschedule03\":\"boolean\",\"mcu/taskschedule04\":\"boolean\",\"mcu/taskschedule05\":\"boolean\",\"button/4\":\"bool\",\"light/maxsensors\":\"integer\",\"light/pins\":\"String\",\"sound/maxsensors\":\"integer\",\"sound/pins\":\"String\",\"airquality/maxsensors\":\"integer\",\"airquality/pins\":\"String\",\"power/maxsensors\":\"integer\",\"power/pins\":\"String\",\"waterlevel/maxsensors\":\"integer\",\"waterlevel/pins\":\"String\",\"vibration/maxsensors\":\"integer\",\"vibration/pins\":\"String\",\"mcu/startingup\":\"boolean\"};\nunitDict = {\"sound/loadness\":\"dB\",\"vibration/vibration\":\"m/s2\",\"waterflow/tankwaterinlet\":\"lpm\",\"power/voltage\":\"V\",\"power/mV\":\"mV\",\"power/amp\":\"V\",\"power/mA\":\"mV\",\"power/loadvoltage\":\"V\",\"power/loadpower\":\"W\",\"power/loadpowermw\":\"mW\",\"power/loadamps\":\"W\",\"power/loadmA\":\"mW\",\"environment/temperature\":\"°C\",\"environment/humidity\":\"%\",\"environment/heatindex\":\"°C\",\"environment/pressure\":\"hPa\",\"light/illuminance\":\"lux\",\"mcu/vcc\":\"volts\",\"mcu/realsize\":\"bytes\",\"mcu/chipsize\":\"bytes\",\"mcu/freespace\":\"bytes\",\"mcu/ntptime\":\"bytes\",\"mcu/uptime\":\"sec\",\"mcu/execlog\":\"csv\",\"waterlevel/fishtank/level\":\"cm\",\"waterlevel/fishtank/percentagefull\":\"%\",\"battery/vcc\":\"volts\",\"environment/altitude\":\"m\",\"environment/abshumidity\":\"g/m³\",\"light/ambientlight\":\"lux\",\"temperature00/degrees\":\"ºC\",\"uvindex/uvindex\":\"idx\",\"temperature/degrees\":\"ºC\",\"mcu/freeheap\":\"bytes\"}\n\nflow.set(\"typeDict\",typeDict);\nflow.set(\"unitDict\",unitDict);","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\ntypeDict = {\"mcu/execlog\":\"String\",\"proximity/movement\":\"boolean\",\"sound/loadness\":\"integer\",\"vibration/vibration\":\"integer\",\"waterflow/tankwaterinlet\":\"integer\",\"power/voltage\":\"integer\",\"power/mV\":\"integer\",\"power/amp\":\"integer\",\"power/mA\":\"integer\",\"power/loadvoltage\":\"integer\",\"power/loadpower\":\"integer\",\"power/loadpowermw\":\"integer\",\"power/loadamps\":\"integer\",\"power/loadmA\":\"integer\",\"environment/temperature\":\"float\",\"environment/humidity\":\"float\",\"environment/heatindex\":\"float\",\"environment/pressure\":\"integer\",\"light/status\":\"enum\",\"light/illuminance\":\"integer\",\"mcu/heartbeat\":\"boolean\",\"airquality/status\":\"enum\",\"uvindex/status\":\"enum\",\"mcu/SensorGroup\":\"String\",\"mcu/vcc\":\"float\",\"mcu/realsize\":\"integer\",\"mcu/chipsize\":\"integer\",\"mcu/freespace\":\"integer\",\"mcu/ntptime\":\"String\",\"mcu/uptime\":\"integer\",\"waterlevel/fishtank/level\":\"integer\",\"waterlevel/fishtank/percentagefull\":\"float\",\"battery/vcc\":\"float\",\"environment/altitude\":\"integer\",\"environment/abshumidity\":\"float\",\"light/ambientlight\":\"String\",\"temperature00/degrees\":\"float\",\"uvindex/uvindex\":\"integer\",\"uvindex/uvrating\":\"String\",\"mcu/setsensorsound\":\"boolean\",\"mcu/setsensoruv\":\"boolean\",\"mcu/setsensorproximity\":\"boolean\",\"mcu/setsensormoisture\":\"boolean\",\"mcu/setsensorrainfall\":\"boolean\",\"mcu/setsensorlight\":\"boolean\",\"mcu/setsensorenviron\":\"boolean\",\"mcu/setsensorair\":\"boolean\",\"mcu/setsensorvibration\":\"boolean\",\"mcu/setsensorhydraphone\":\"boolean\",\"mcu/setsensordooropen\":\"boolean\",\"mcu/taskschedule01/period\":\"integer\",\"mcu/setsensorfishfeed\":\"boolean\",\"temperature/degrees\":\"float\",\"frontdoor/\":\"string\",\"frontdoor/dimmer2\":\"integer\",\"mcu/freeheap\":\"integer\",\"mcu/taskschedule01\":\"boolean\",\"mcu/taskschedule01/timeslice\":\"String\",\"mcu/setsensorrelay\":\"boolean\",\"mcu/taskschedule02/period\":\"integer\",\"mcu/setsensorpower\":\"boolean\",\"mcu/taskschedule02/timeslice\":\"String\",\"mcu/setsensorwaterlevel\":\"boolean\",\"mcu/taskschedule03/period\":\"integer\",\"mcu/setsensorwaterflow\":\"boolean\",\"mcu/taskschedule03/timeslice\":\"String\",\"mcu/setsensorthermister\":\"boolean\",\"mcu/taskschedule04/period\":\"integer\",\"mcu/setsensorwaterqual\":\"boolean\",\"mcu/taskschedule04/timeslice\":\"String\",\"mcu/setsensorph\":\"boolean\",\"mcu/taskschedule05/period\":\"integer\",\"mcu/setsensorturbidity\":\"boolean\",\"mcu/taskschedule05/timeslice\":\"String\",\"mcu/taskschedule02\":\"boolean\",\"mcu/taskschedule03\":\"boolean\",\"mcu/taskschedule04\":\"boolean\",\"mcu/taskschedule05\":\"boolean\",\"button/4\":\"bool\",\"light/maxsensors\":\"integer\",\"light/pins\":\"String\",\"sound/maxsensors\":\"integer\",\"sound/pins\":\"String\",\"airquality/maxsensors\":\"integer\",\"airquality/pins\":\"String\",\"power/maxsensors\":\"integer\",\"power/pins\":\"String\",\"waterlevel/maxsensors\":\"integer\",\"waterlevel/pins\":\"String\",\"vibration/maxsensors\":\"integer\",\"vibration/pins\":\"String\",\"mcu/startingup\":\"boolean\"};\nunitDict = {\"sound/loadness\":\"dB\",\"vibration/vibration\":\"m/s2\",\"waterflow/tankwaterinlet\":\"lpm\",\"power/voltage\":\"V\",\"power/mV\":\"mV\",\"power/amp\":\"V\",\"power/mA\":\"mV\",\"power/loadvoltage\":\"V\",\"power/loadpower\":\"W\",\"power/loadpowermw\":\"mW\",\"power/loadamps\":\"W\",\"power/loadmA\":\"mW\",\"environment/temperature\":\"°C\",\"environment/humidity\":\"%\",\"environment/heatindex\":\"HI °C\",\"environment/pressure\":\"hPa\",\"light/illuminance\":\"lux\",\"mcu/vcc\":\"volts\",\"mcu/realsize\":\"bytes\",\"mcu/chipsize\":\"bytes\",\"mcu/freespace\":\"bytes\",\"mcu/ntptime\":\"bytes\",\"mcu/uptime\":\"sec\",\"mcu/execlog\":\"csv\",\"waterlevel/fishtank/level\":\"cm\",\"waterlevel/fishtank/percentagefull\":\"%\",\"battery/vcc\":\"volts\",\"environment/altitude\":\"m\",\"environment/abshumidity\":\"g/m³\",\"light/ambientlight\":\"lux\",\"temperature00/degrees\":\"ºC\",\"uvindex/uvindex\":\"idx\",\"temperature/degrees\":\"ºC\",\"mcu/freeheap\":\"bytes\"}\n\nflow.set(\"typeDict\",typeDict);\nflow.set(\"unitDict\",unitDict);","finalize":"","libs":[],"x":330,"y":580,"wires":[[]]},{"id":"21cf02dd.4561de","type":"debug","z":"c3a4dc59.cbd38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":170,"y":220,"wires":[]},{"id":"901fa619.2ca5d8","type":"inject","z":"c3a4dc59.cbd38","d":true,"name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":600,"wires":[["bd8e882d.87ca78"]]},{"id":"99be3051.43da8","type":"function","z":"c3a4dc59.cbd38","name":"Set Topic to Datatype","func":"if (flow.get(\"typeDict\")[msg.topic] === undefined) {\n    checkedTypes = flow.get(\"checkedTypes\") || [];\n    if (!(checkedTypes.includes(msg.topic))) {\n        checkedTypes.push(msg.topic);\n        flow.set(\"checkedTypes\", checkedTypes)\n        if (msg.topic.includes(\"$datatype\"))\n            msg.topic = msg.path + msg.topic;\n        else\n            msg.topic = msg.path + msg.topic + \"/$datatype\";\n        \n        return msg;   \n    }\n}\n//return undefined;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":660,"wires":[["e4f03b75.ab72e8","c34572b0.5520e"]]},{"id":"c786159c.878828","type":"function","z":"c3a4dc59.cbd38","name":"Set Topic to Unit","func":"if (flow.get(\"unitDict\")[msg.topic] === undefined) {\n    checkedUnits = flow.get(\"checkedUnits\") || [];\n    if (!(checkedUnits.includes(msg.topic))) {\n        checkedUnits.push(msg.topic);\n        flow.set(\"checkedUnits\", checkedUnits)\n        if (msg.topic.includes(\"$unit\"))\n            msg.topic = msg.path + msg.topic;\n        else\n            msg.topic = msg.path + msg.topic + \"/$unit\";\n        \n        return msg;   \n    }\n}\n//return undefined;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":860,"y":700,"wires":[["e4f03b75.ab72e8","586e97f9.762358"]]},{"id":"e4f03b75.ab72e8","type":"digitaloak-mqtt-in","z":"c3a4dc59.cbd38","name":"$datatype / $unit HASS","qos":"2","datatype":"auto","unsubscribe-after-first-msg-recv":true,"broker":"9cef5065.4f183","x":570,"y":720,"wires":[["57cd44d.10596bc","d8e54da5.58ba2"]]},{"id":"57cd44d.10596bc","type":"function","z":"c3a4dc59.cbd38","name":"Split Topic","func":"// Authored by Martin Hannah & Michael Thompson\n// Last updated by Michael Thompson on 19/2/21\n// split the topic into two parts\nvar parts = msg.topic.split('/');\nvar topic = '';\nvar base = '';\nvar n    = 0;\nfor (var i of parts) {\n    if (n > 1) \n        topic = topic + i ;\n        if (i !== parts.length[i]) \n            topic = topic + '/';\n    n++;\n}\nbase = parts[0] + '/' + parts[1] + '/' ;\nmsg.path = base;\nmsg.topic = topic.substring(2,topic.length - 1);\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":780,"wires":[["d12f2061.76501"]]},{"id":"d12f2061.76501","type":"function","z":"c3a4dc59.cbd38","name":"Update Type And Unit Dicts","func":"// Authored by Michael Thompson on 30/12/2020\n// Last updated by Michael Thompson on 19/2/2021\n\n\nvar topic = msg.topic;\n\n// Updates flow variable containing datatypes for each topic\nconst typeDict = flow.get(\"typeDict\") || {};\nif (topic.includes(\"$datatype\"))\n    // Assigns datatype to dict entry of topic name (ie without \"/$datatype\" suffix)\n    typeDict[topic.substring(0, topic.indexOf(\"/$datatype\"))] = msg.payload;\nflow.set(\"typeDict\", typeDict);\n\n// Updates flow variable containing datatypes for each topic\nconst unitDict = flow.get(\"unitDict\") || {};\n\n// HARD CODED FIXES\nunitDict[\"environment/heatindex\"] = \"°C\";\n\nif (topic.includes(\"$unit\"))\n    // Assigns unit to dict entry of topic name (ie without \"/$unit\" suffix)\n    unitDict[topic.substring(0, topic.indexOf(\"/$unit\"))] = msg.payload;\nflow.set(\"unitDict\", unitDict);\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":860,"y":800,"wires":[["8cfe62b1.cefaa"]]},{"id":"8cfe62b1.cefaa","type":"debug","z":"c3a4dc59.cbd38","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":800,"wires":[]},{"id":"8683e5b7.1e8f68","type":"function","z":"c3a4dc59.cbd38","name":"Discard if topic contains datatype or unit","func":"if (!(msg.topic.includes(\"$datatype\")) && !(msg.topic.includes(\"$unit\")))\n    return msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":80,"wires":[["290af507.edda7a"]]},{"id":"d8e54da5.58ba2","type":"debug","z":"c3a4dc59.cbd38","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":860,"y":760,"wires":[]},{"id":"586e97f9.762358","type":"debug","z":"c3a4dc59.cbd38","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":700,"wires":[]},{"id":"c34572b0.5520e","type":"debug","z":"c3a4dc59.cbd38","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":660,"wires":[]},{"id":"4dfddc32.668674","type":"mqtt in","z":"c3a4dc59.cbd38","name":"ESP","topic":"cyper/#","qos":"1","datatype":"auto","broker":"a0a384b2.b52d18","nl":false,"rap":false,"x":70,"y":100,"wires":[["8683e5b7.1e8f68"]]},{"id":"5fd41923.e007c8","type":"function","z":"c3a4dc59.cbd38","name":"API Setup (QNAP00)","func":"// Last updated by Lachlan Magrath on 4/2/2021\n\ntoken = \"6K5r8FLBQWkzqYwtdmjObF_MkLMNHhKJjKptyhaXhTzYrEhh1IDYfGCXcBUSGxjR7L5PRUzCxBQ4sCQSj78vIw==\"; \naddress = \"http://10.0.0.211:19086/api/v2/write\";\norganisation = \"cypernex\";\nbucket = \"all-data\";\nprecision = \"ms\";\n\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = address+\"?org=\"+organisation+\"&bucket=\"+bucket+\"&precision=\"+precision;\nmsg.headers = {\"Authorization\" : \"Token \" + token}\n\n// 4/3/21. Suggested addition of timestamp. Remove timestamp field.\n// delete msg.timestamp;\nmsg.payload = \"test,host=cyper/ESP12S088/ mcu/heartbeat=1\";\n//msg.payload = \"testhead,host=host1 meat_percent=64.43234543 1556896326\";\n\nif (msg.measurement === undefined) return;\n\nif (msg.payload != [])\n    return msg;\n\nreturn;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":460,"wires":[["cc7e3ed6.26e41"]]},{"id":"cc7e3ed6.26e41","type":"http request","z":"c3a4dc59.cbd38","name":"","method":"use","ret":"txt","paytoqs":"query","url":"","tls":"","persist":false,"proxy":"","authType":"","x":990,"y":500,"wires":[["516f12e.74277ec"]]},{"id":"516f12e.74277ec","type":"debug","z":"c3a4dc59.cbd38","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1010,"y":540,"wires":[]},{"id":"c7e3081d.4f6398","type":"inject","z":"c3a4dc59.cbd38","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":810,"y":400,"wires":[["5fd41923.e007c8"]]}]
